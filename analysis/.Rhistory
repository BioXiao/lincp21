}
#Plot Tracks
write("\tplotting...",stderr())
# myTracks<-c(bamTracks,knownGenes)
myTracks<-c(idxTrack,axTrack,genetrack,bamTracks,koTrack)
trackSizes<-c(1,1,4,rep(1,length(bamTracks)),1)
plotTracks(myTracks,from=from,to=to,chromosome=myChr,showAxis=FALSE,background.title="black",col.title="white",col.axis="black",sizes=trackSizes,geneSymbol=TRUE)
}
doPlot(genome=genome, name=name, myChr=chrom, from=from, to=to, window=20,bamFiles=bamFiles, bamNames=bamNames, koStart=koStart,koWidth=koWidth,koChr=koChr)
axTrack<-GenomeAxisTrack(add53 = TRUE,add35 = TRUE, labelPos = "above")
idxTrack <- IdeogramTrack(genome = genome, chromosome = myChr)
koTrack<-AnnotationTrack(start=koStart,width=koWidth,chromosome=koChr,strand="*",id=koStrain,genome="mm10",name="KO Region")
myChr<-chrom
idxTrack <- IdeogramTrack(genome = genome, chromosome = myChr)
koTrack<-AnnotationTrack(start=koStart,width=koWidth,chromosome=koChr,strand="*",id=koStrain,genome="mm10",name="KO Region")
write("\tBamTracks",stderr())
bamTracks<-list()
bamOrder<-c(1:length(bamFiles))
for (i in bamOrder){
track<-makeBamTrack(bamFiles[[i]],bamNames[[i]],genome=genome,chromosome=myChr,color=bamColors[i],window=window)
bamTracks<-c(bamTracks,track)
}
myTracks<-c(idxTrack,axTrack,genetrack,bamTracks,koTrack)
trackSizes<-c(1,1,4,rep(1,length(bamTracks)),1)
plotTracks(myTracks,from=from,to=to,chromosome=myChr,showAxis=FALSE,background.title="black",col.title="white",col.axis="black",sizes=trackSizes,geneSymbol=TRUE)
traceback()
Helper Functions
movingAverage <- function(x, n=10, centered=TRUE) {
if (centered) {
before <- floor  ((n-1)/2)
after  <- ceiling((n-1)/2)
} else {
before <- n-1
after  <- 0
}
# Track the sum and count of number of non-NA items
s     <- rep(0, length(x))
count <- rep(0, length(x))
# Add the centered data
new <- x
# Add to count list wherever there isn't a
count <- count + !is.na(new)
# Now replace NA_s with 0_s and add to total
new[is.na(new)] <- 0
s <- s + new
# Add the data from before
i <- 1
while (i <= before) {
# This is the vector with offset values to add
new   <- c(rep(NA, i), x[1:(length(x)-i)])
count <- count + !is.na(new)
new[is.na(new)] <- 0
s <- s + new
i <- i+1
}
# Add the data from after
i <- 1
while (i <= after) {
# This is the vector with offset values to add
new   <- c(x[(i+1):length(x)], rep(NA, i))
count <- count + !is.na(new)
new[is.na(new)] <- 0
s <- s + new
i <- i+1
}
# return sum divided by count
s/count
}
makeBamTrack<-function(bamFile,bamName,genome=genome,chromosome,color="steelblue",window=20,ylim=c(0,60)){
track<-DataTrack(range=bamFile,name=bamName,genome=genome,type="h",transformation=function(x){movingAverage(x,window)},col=color,fill.histogram=color,col.histogram=color,chromosome=chromosome, ylim=ylim, lwd=1.5)
return(track)
}
### Constants #########
annot<-annotation(myGene)
margin<-5000
locus<-strsplit(annot$locus,":")
locus<-unlist(locus)
chrom<-locus[[1]]
start_and_end<-strsplit(locus[[2]],"-")
start_and_end<-unlist(start_and_end)
from<-as.numeric(start_and_end[[1]])-margin
#from<-as.numeric(start_and_end[[1]])-5000
to<-as.numeric(start_and_end[[2]])+margin
#to<-as.numeric(start_and_end[[2]])+28000
genetrack<-GeneRegionTrack(mm10DB,rstarts=from,rends=to,chromosome=chrom,showId=TRUE,geneSymbol=TRUE,genome=genome,name="LincRNA Isoforms",fill="steelblue")
JRs<-samples
colnames(deletionCoords)<-c("gene_name","gene_region","deletionRegion")
koStrain<-strain
coords<-deletionCoords[which(deletionCoords$gene_name==koStrain),3]
coords<-strsplit(coords,":")
coords<-unlist(coords)
koChr<-coords[1]
positions<-strsplit(coords[[2]],"-")
positions<-unlist(positions)
koStart<-as.numeric(positions[1])
koWidth<-abs(as.numeric(positions[2])-as.numeric(positions[1]))
bamRoot<-'/n/rinn_data2/users/agroff/seq/OtherMice/Diana/lincP21/bam/'
bamFiles<-lapply(JRs,function(x){paste(bamRoot,x,"/accepted_hits.bam",sep="")})
bamNames<-reps$rep_name
specCols<-brewer.pal(3,"Paired")
colPal<-colorRampPalette(specCols)
bamColors<-colPal(length(bamFiles))
doPlot<-function(genome=genome,name,myChr,from,to,window,bamFiles,bamNames,koStart,koWidth,koChr){
#Make Tracks
axTrack<-GenomeAxisTrack(add53 = TRUE,add35 = TRUE, labelPos = "above")
idxTrack <- IdeogramTrack(genome = genome, chromosome = myChr)
koTrack<-AnnotationTrack(start=koStart,width=koWidth,chromosome=koChr,strand="*",id=koStrain,genome="mm10",name="KO Region")
#BamTracks
write("\tBamTracks",stderr())
bamTracks<-list()
bamOrder<-c(1:length(bamFiles))
for (i in bamOrder){
track<-makeBamTrack(bamFiles[[i]],bamNames[[i]],genome=genome,chromosome=myChr,color=bamColors[i],window=window)
bamTracks<-c(bamTracks,track)
}
#Plot Tracks
write("\tplotting...",stderr())
# myTracks<-c(bamTracks,knownGenes)
myTracks<-c(idxTrack,axTrack,genetrack,bamTracks,koTrack)
trackSizes<-c(1,1,4,rep(1,length(bamTracks)),1)
plotTracks(myTracks,from=from,to=to,chromosome=myChr,showAxis=FALSE,background.title="black",col.title="white",col.axis="black",sizes=trackSizes,geneSymbol=TRUE)
}
doPlot(genome=genome, name=name, myChr=chrom, from=from, to=to, window=20,bamFiles=bamFiles, bamNames=bamNames, koStart=koStart,koWidth=koWidth,koChr=koChr)
axTrack<-GenomeAxisTrack(add53 = TRUE,add35 = TRUE, labelPos = "above")
idxTrack <- IdeogramTrack(genome = genome, chromosome = myChr)
koTrack<-AnnotationTrack(start=koStart,width=koWidth,chromosome=koChr,strand="*",id=koStrain,genome="mm10",name="KO Region")
#BamTracks
write("\tBamTracks",stderr())
bamTracks<-list()
bamOrder<-c(1:length(bamFiles))
for (i in bamOrder){
track<-makeBamTrack(bamFiles[[i]],bamNames[[i]],genome=genome,chromosome=myChr,color=bamColors[i],window=window)
bamTracks<-c(bamTracks,track)
}
#Plot Tracks
write("\tplotting...",stderr())
# myTracks<-c(bamTracks,knownGenes)
myTracks<-c(idxTrack,axTrack,genetrack,bamTracks,koTrack)
trackSizes<-c(1,1,4,rep(1,length(bamTracks)),1)
plotTracks(myTracks,from=from,to=to,chromosome=myChr,showAxis=FALSE,background.title="black",col.title="white",col.axis="black",sizes=trackSizes,geneSymbol=TRUE)
traceback()
margin<-6000
locus<-strsplit(annot$locus,":")
locus<-unlist(locus)
chrom<-locus[[1]]
start_and_end<-strsplit(locus[[2]],"-")
start_and_end<-unlist(start_and_end)
from<-as.numeric(start_and_end[[1]])-margin
#from<-as.numeric(start_and_end[[1]])-5000
to<-as.numeric(start_and_end[[2]])+margin
#to<-as.numeric(start_and_end[[2]])+28000
genetrack<-GeneRegionTrack(mm10DB,rstarts=from,rends=to,chromosome=chrom,showId=TRUE,geneSymbol=TRUE,genome=genome,name="LincRNA Isoforms",fill="steelblue")
JRs<-samples
colnames(deletionCoords)<-c("gene_name","gene_region","deletionRegion")
koStrain<-strain
coords<-deletionCoords[which(deletionCoords$gene_name==koStrain),3]
coords<-strsplit(coords,":")
coords<-unlist(coords)
koChr<-coords[1]
positions<-strsplit(coords[[2]],"-")
positions<-unlist(positions)
koStart<-as.numeric(positions[1])
koWidth<-abs(as.numeric(positions[2])-as.numeric(positions[1]))
bamRoot<-'/n/rinn_data2/users/agroff/seq/OtherMice/Diana/lincP21/bam/'
bamFiles<-lapply(JRs,function(x){paste(bamRoot,x,"/accepted_hits.bam",sep="")})
bamNames<-reps$rep_name
specCols<-brewer.pal(3,"Paired")
colPal<-colorRampPalette(specCols)
bamColors<-colPal(length(bamFiles))
axTrack<-GenomeAxisTrack(add53 = TRUE,add35 = TRUE, labelPos = "above")
idxTrack <- IdeogramTrack(genome = genome, chromosome = myChr)
koTrack<-AnnotationTrack(start=koStart,width=koWidth,chromosome=koChr,strand="*",id=koStrain,genome="mm10",name="KO Region")
#BamTracks
write("\tBamTracks",stderr())
bamTracks<-list()
bamOrder<-c(1:length(bamFiles))
for (i in bamOrder){
track<-makeBamTrack(bamFiles[[i]],bamNames[[i]],genome=genome,chromosome=myChr,color=bamColors[i],window=window)
bamTracks<-c(bamTracks,track)
}
#Plot Tracks
write("\tplotting...",stderr())
# myTracks<-c(bamTracks,knownGenes)
myTracks<-c(idxTrack,axTrack,genetrack,bamTracks,koTrack)
trackSizes<-c(1,1,4,rep(1,length(bamTracks)),1)
plotTracks(myTracks,from=from,to=to,chromosome=myChr,showAxis=FALSE,background.title="black",col.title="white",col.axis="black",sizes=trackSizes,geneSymbol=TRUE)
plotTracks(bamTracks,from=from,to=to,chromosome=myChr,showAxis=FALSE,background.title="black",col.title="white",col.axis="black",sizes=rep(1,length(bamTracks)),geneSymbol=TRUE)
traceback()
plotTracks(bamTracks[[1]],from=from,to=to,chromosome=myChr,showAxis=FALSE,background.title="black",col.title="white",col.axis="black",sizes=c(1),geneSymbol=TRUE)
plotTracks(bamTracks[[2]],from=from,to=to,chromosome=myChr,showAxis=FALSE,background.title="black",col.title="white",col.axis="black",sizes=c(1),geneSymbol=TRUE)
traceback()
movingAverage <- function(x, n=20, centered=TRUE) {
if (centered) {
before <- floor  ((n-1)/2)
after  <- ceiling((n-1)/2)
} else {
before <- n-1
after  <- 0
}
# Track the sum and count of number of non-NA items
s     <- rep(0, length(x))
count <- rep(0, length(x))
# Add the centered data
new <- x
# Add to count list wherever there isn't a
count <- count + !is.na(new)
# Now replace NA_s with 0_s and add to total
new[is.na(new)] <- 0
s <- s + new
# Add the data from before
i <- 1
while (i <= before) {
# This is the vector with offset values to add
new   <- c(rep(NA, i), x[1:(length(x)-i)])
count <- count + !is.na(new)
new[is.na(new)] <- 0
s <- s + new
i <- i+1
}
# Add the data from after
i <- 1
while (i <= after) {
# This is the vector with offset values to add
new   <- c(x[(i+1):length(x)], rep(NA, i))
count <- count + !is.na(new)
new[is.na(new)] <- 0
s <- s + new
i <- i+1
}
# return sum divided by count
s/count
}
makeBamTrack<-function(bamFile,bamName,genome=genome,chromosome,color="steelblue",window=20,ylim=c(0,60)){
track<-DataTrack(range=bamFile,name=bamName,genome=genome,type="h",transformation=function(x){movingAverage(x,window)},col=color,fill.histogram=color,col.histogram=color,chromosome=chromosome, ylim=ylim, lwd=1.5)
return(track)
}
### Constants #########
annot<-annotation(myGene)
margin<-6000
locus<-strsplit(annot$locus,":")
locus<-unlist(locus)
chrom<-locus[[1]]
start_and_end<-strsplit(locus[[2]],"-")
start_and_end<-unlist(start_and_end)
from<-as.numeric(start_and_end[[1]])-margin
#from<-as.numeric(start_and_end[[1]])-5000
to<-as.numeric(start_and_end[[2]])+margin
#to<-as.numeric(start_and_end[[2]])+28000
genetrack<-GeneRegionTrack(mm10DB,rstarts=from,rends=to,chromosome=chrom,showId=TRUE,geneSymbol=TRUE,genome=genome,name="LincRNA Isoforms",fill="steelblue")
JRs<-samples
colnames(deletionCoords)<-c("gene_name","gene_region","deletionRegion")
koStrain<-strain
coords<-deletionCoords[which(deletionCoords$gene_name==koStrain),3]
coords<-strsplit(coords,":")
coords<-unlist(coords)
koChr<-coords[1]
positions<-strsplit(coords[[2]],"-")
positions<-unlist(positions)
koStart<-as.numeric(positions[1])
koWidth<-abs(as.numeric(positions[2])-as.numeric(positions[1]))
bamRoot<-'/n/rinn_data2/users/agroff/seq/OtherMice/Diana/lincP21/bam/'
bamFiles<-lapply(JRs,function(x){paste(bamRoot,x,"/accepted_hits.bam",sep="")})
bamNames<-reps$rep_name
specCols<-brewer.pal(3,"Paired")
colPal<-colorRampPalette(specCols)
bamColors<-colPal(length(bamFiles))
write("\tBamTracks",stderr())
bamTracks<-list()
bamOrder<-c(1:length(bamFiles))
for (i in bamOrder){
track<-makeBamTrack(bamFiles[[i]],bamNames[[i]],genome=genome,chromosome=myChr,color=bamColors[i],window=window)
bamTracks<-c(bamTracks,track)
}
plotTracks(bamTracks[[2]],from=from,to=to,chromosome=myChr,showAxis=FALSE,background.title="black",col.title="white",col.axis="black",sizes=c(1),geneSymbol=TRUE)
traceback()
### Constants #########
annot<-annotation(myGene)
margin<-10000
locus<-strsplit(annot$locus,":")
locus<-unlist(locus)
chrom<-locus[[1]]
start_and_end<-strsplit(locus[[2]],"-")
start_and_end<-unlist(start_and_end)
from<-as.numeric(start_and_end[[1]])-margin
#from<-as.numeric(start_and_end[[1]])-5000
to<-as.numeric(start_and_end[[2]])+margin
#to<-as.numeric(start_and_end[[2]])+28000
genetrack<-GeneRegionTrack(mm10DB,rstarts=from,rends=to,chromosome=chrom,showId=TRUE,geneSymbol=TRUE,genome=genome,name="LincRNA Isoforms",fill="steelblue")
JRs<-samples
colnames(deletionCoords)<-c("gene_name","gene_region","deletionRegion")
koStrain<-strain
coords<-deletionCoords[which(deletionCoords$gene_name==koStrain),3]
coords<-strsplit(coords,":")
coords<-unlist(coords)
koChr<-coords[1]
positions<-strsplit(coords[[2]],"-")
positions<-unlist(positions)
koStart<-as.numeric(positions[1])
koWidth<-abs(as.numeric(positions[2])-as.numeric(positions[1]))
bamRoot<-'/n/rinn_data2/users/agroff/seq/OtherMice/Diana/lincP21/bam/'
bamFiles<-lapply(JRs,function(x){paste(bamRoot,x,"/accepted_hits.bam",sep="")})
bamNames<-reps$rep_name
specCols<-brewer.pal(3,"Paired")
colPal<-colorRampPalette(specCols)
bamColors<-colPal(length(bamFiles))
bamTracks<-list()
bamOrder<-c(1:length(bamFiles))
for (i in bamOrder){
track<-makeBamTrack(bamFiles[[i]],bamNames[[i]],genome=genome,chromosome=myChr,color=bamColors[i],window=window)
bamTracks<-c(bamTracks,track)
}
plotTracks(myTracks,from=from,to=to,chromosome=myChr,showAxis=FALSE,background.title="black",col.title="white",col.axis="black",sizes=trackSizes,geneSymbol=TRUE)
plotTracks(bamTracks[[2]],from=from,to=to,chromosome=myChr,showAxis=FALSE,background.title="black",col.title="white",col.axis="black",sizes=c(1),geneSymbol=TRUE)
annot<-annotation(myGene)
margin<-30000
locus<-strsplit(annot$locus,":")
locus<-unlist(locus)
chrom<-locus[[1]]
start_and_end<-strsplit(locus[[2]],"-")
start_and_end<-unlist(start_and_end)
from<-as.numeric(start_and_end[[1]])-margin
#from<-as.numeric(start_and_end[[1]])-5000
to<-as.numeric(start_and_end[[2]])+margin
#to<-as.numeric(start_and_end[[2]])+28000
genetrack<-GeneRegionTrack(mm10DB,rstarts=from,rends=to,chromosome=chrom,showId=TRUE,geneSymbol=TRUE,genome=genome,name="LincRNA Isoforms",fill="steelblue")
JRs<-samples
colnames(deletionCoords)<-c("gene_name","gene_region","deletionRegion")
koStrain<-strain
coords<-deletionCoords[which(deletionCoords$gene_name==koStrain),3]
coords<-strsplit(coords,":")
coords<-unlist(coords)
koChr<-coords[1]
positions<-strsplit(coords[[2]],"-")
positions<-unlist(positions)
koStart<-as.numeric(positions[1])
koWidth<-abs(as.numeric(positions[2])-as.numeric(positions[1]))
bamRoot<-'/n/rinn_data2/users/agroff/seq/OtherMice/Diana/lincP21/bam/'
bamFiles<-lapply(JRs,function(x){paste(bamRoot,x,"/accepted_hits.bam",sep="")})
bamNames<-reps$rep_name
specCols<-brewer.pal(3,"Paired")
colPal<-colorRampPalette(specCols)
bamColors<-colPal(length(bamFiles))
#Make Tracks
axTrack<-GenomeAxisTrack(add53 = TRUE,add35 = TRUE, labelPos = "above")
idxTrack <- IdeogramTrack(genome = genome, chromosome = myChr)
koTrack<-AnnotationTrack(start=koStart,width=koWidth,chromosome=koChr,strand="*",id=koStrain,genome="mm10",name="KO Region")
#BamTracks
write("\tBamTracks",stderr())
bamTracks<-list()
bamOrder<-c(1:length(bamFiles))
for (i in bamOrder){
track<-makeBamTrack(bamFiles[[i]],bamNames[[i]],genome=genome,chromosome=myChr,color=bamColors[i],window=window)
bamTracks<-c(bamTracks,track)
}
#Plot Tracks
write("\tplotting...",stderr())
# myTracks<-c(bamTracks,knownGenes)
myTracks<-c(idxTrack,axTrack,genetrack,bamTracks,koTrack)
trackSizes<-c(1,1,4,rep(1,length(bamTracks)),1)
plotTracks(bamTracks[[2]],from=from,to=to,chromosome=myChr,showAxis=FALSE,background.title="black",col.title="white",col.axis="black",sizes=c(1),geneSymbol=TRUE)
traceback()
movingAverage <- function(x, n=10, centered=TRUE) {
if (centered) {
before <- floor  ((n-1)/2)
after  <- ceiling((n-1)/2)
} else {
before <- n-1
after  <- 0
}
# Track the sum and count of number of non-NA items
s     <- rep(0, length(x))
count <- rep(0, length(x))
# Add the centered data
new <- x
# Add to count list wherever there isn't a
count <- count + !is.na(new)
# Now replace NA_s with 0_s and add to total
new[is.na(new)] <- 0
s <- s + new
# Add the data from before
i <- 1
while (i <= before) {
# This is the vector with offset values to add
new   <- c(rep(NA, i), x[1:(length(x)-i)])
count <- count + !is.na(new)
new[is.na(new)] <- 0
s <- s + new
i <- i+1
}
# Add the data from after
i <- 1
while (i <= after) {
# This is the vector with offset values to add
new   <- c(x[(i+1):length(x)], rep(NA, i))
count <- count + !is.na(new)
new[is.na(new)] <- 0
s <- s + new
i <- i+1
}
# return sum divided by count
s/count
}
makeBamTrack<-function(bamFile,bamName,genome=genome,chromosome,color="steelblue",window=20,ylim=c(0,60)){
track<-DataTrack(range=bamFile,name=bamName,genome=genome,type="h",transformation=function(x){movingAverage(x,window)},col=color,fill.histogram=color,col.histogram=color,chromosome=chromosome, ylim=ylim, lwd=1.5)
return(track)
}
### Constants #########
annot<-annotation(myGene)
margin<-30000
locus<-strsplit(annot$locus,":")
locus<-unlist(locus)
chrom<-locus[[1]]
start_and_end<-strsplit(locus[[2]],"-")
start_and_end<-unlist(start_and_end)
from<-as.numeric(start_and_end[[1]])-margin
#from<-as.numeric(start_and_end[[1]])-5000
to<-as.numeric(start_and_end[[2]])+margin
#to<-as.numeric(start_and_end[[2]])+28000
genetrack<-GeneRegionTrack(mm10DB,rstarts=from,rends=to,chromosome=chrom,showId=TRUE,geneSymbol=TRUE,genome=genome,name="LincRNA Isoforms",fill="steelblue")
JRs<-samples
colnames(deletionCoords)<-c("gene_name","gene_region","deletionRegion")
koStrain<-strain
coords<-deletionCoords[which(deletionCoords$gene_name==koStrain),3]
coords<-strsplit(coords,":")
coords<-unlist(coords)
koChr<-coords[1]
positions<-strsplit(coords[[2]],"-")
positions<-unlist(positions)
koStart<-as.numeric(positions[1])
koWidth<-abs(as.numeric(positions[2])-as.numeric(positions[1]))
bamRoot<-'/n/rinn_data2/users/agroff/seq/OtherMice/Diana/lincP21/bam/'
bamFiles<-lapply(JRs,function(x){paste(bamRoot,x,"/accepted_hits.bam",sep="")})
bamNames<-reps$rep_name
specCols<-brewer.pal(3,"Paired")
colPal<-colorRampPalette(specCols)
bamColors<-colPal(length(bamFiles))
#Make Tracks
axTrack<-GenomeAxisTrack(add53 = TRUE,add35 = TRUE, labelPos = "above")
idxTrack <- IdeogramTrack(genome = genome, chromosome = myChr)
koTrack<-AnnotationTrack(start=koStart,width=koWidth,chromosome=koChr,strand="*",id=koStrain,genome="mm10",name="KO Region")
#BamTracks
write("\tBamTracks",stderr())
bamTracks<-list()
bamOrder<-c(1:length(bamFiles))
for (i in bamOrder){
track<-makeBamTrack(bamFiles[[i]],bamNames[[i]],genome=genome,chromosome=myChr,color=bamColors[i],window=window)
bamTracks<-c(bamTracks,track)
}
to
to-from
plotTracks(bamTracks[[2]],from=from,to=to,chromosome=myChr,showAxis=FALSE,background.title="black",col.title="white",col.axis="black",sizes=c(1),geneSymbol=TRUE)
library(clusterProfiler)
require(biomaRt)
detach("package:GenomicFeatures")
library(ReactomePA)
library(DOSE)
sigGeneIDs<-getSig(cuff, alpha=alpha)
sigGeneIDs<-getSig(cuff, alpha=0.05)
sigGenes<-getGenes(cuff,sigGeneIDs)
geneAnnot<-annotation(sigGenes)
geneNames<-geneAnnot$gene_short_name
sigDiff<-diffData(sigGenes)
sigDiff$foldChange<-sigDiff$value_1/sigDiff$value_2
library(clusterProfiler)
require(biomaRt)
ensembl <- useMart("ENSEMBL_MART_ENSEMBL","mmusculus_gene_ensembl",
host="www.ensembl.org")
#Get entrezIDs
getEntrezIDs<-function (geneNames)
{
tmp <- getBM(attributes = c("entrezgene"), filters = "mgi_symbol", values = geneNames, mart = ensembl)
tmp
}
sigEntrez<-getEntrezIDs(geneNames)
sigEZ<-strsplit(as.character(sigEntrez), ", ")
sigEZ<-unlist(sigEZ)
require(org.Mm.eg.db) #mapping of entrez IDs to genbank
goBP<-enrichGO(gene=sigEZ, organism="mouse",ont="BP",pvalueCutoff=0.01,readable=T)
plot(goBP,showCategory=20) + theme(axis.text.x=element_text(angle=-90,hjust=0)) + ggtitle("Enriched BP")+theme_bw()
ensembl <- useMart("ENSEMBL_MART_ENSEMBL","mmusculus_gene_ensembl",
host="www.ensembl.org")
getEntrezIDs<-function (geneNames)
{
tmp <- getBM(attributes = c("entrezgene"), filters = "mgi_symbol", values = geneNames, mart = ensembl)
tmp
}
sigEntrez<-getEntrezIDs(geneNames)
listMarts
?listMarts
listMarts("ENSEMBLE_MART_ENSEMBL",host="www.ensembl.org")
?useMart
ensembl <- useMart("ENSEMBL_MART_ENSEMBL","mmusculus_gene_ensembl",host="www.ensembl.org")
listMarts()
listMarts(host='www.ensembl.org')
ensembl <- useMart("ENSEMBL_MART_ENSEMBL","mmusculus_gene_ensembl",host="jul2015.archive.ensembl.org")
#Get entrezIDs
getEntrezIDs<-function (geneNames)
{
tmp <- getBM(attributes = c("entrezgene"), filters = "mgi_symbol", values = geneNames, mart = ensembl)
tmp
}
sigEntrez<-getEntrezIDs(geneNames)
sigEZ<-strsplit(as.character(sigEntrez), ", ")
sigEZ<-unlist(sigEZ)
require(org.Mm.eg.db) #mapping of entrez IDs to genbank
goBP<-enrichGO(gene=sigEZ, organism="mouse",ont="BP",pvalueCutoff=0.01,readable=T)
goMF<-enrichGO(gene=sigEZ, organism="mouse",ont="MF",pvalueCutoff=0.01,readable=T)
plot(goBP,showCategory=20) + theme(axis.text.x=element_text(angle=-90,hjust=0)) + ggtitle("Enriched BP")+theme_bw()
goMF<-enrichGO(gene=sigEZ, organism="mouse",ont="MF",pvalueCutoff=0.01,readable=T)
kegg<-enrichKEGG(gene=sigEZ, organism="mouse",pvalueCutoff=0.01, readable=T)
pathway<-enrichPathway(gene=sigEZ,organism="mouse",pvalueCutoff=0.01, readable=T)
plot(goMF,showCategory=20) + theme(axis.text.x=element_text(angle=-90,hjust=0)) + ggtitle("Enriched MF")+theme_bw()
