strain<-"Trp53cor1"
timepoint<-"Embryonic"
filename<-"Leg_WT_v_KO"
dir<-"/n/rinn_data1/users/agroff/seq/OtherMice/Diana/lincP21/diff/oldDiffs/Trp53cor1"
strain<-"Trp53cor1"
library(cummeRbund)
library(xtable)
library(limma)
library(GSA)
library(gplots)
library(marray)
library(ggplot2)
library(gtable)
library(gridExtra)
library(RColorBrewer)
library(RMySQL)
p53_gs<-GSA.read.gmt("/n/rinn_data1/users/agroff/seq/OtherMice/Diana/lincP21/diff/p53_genesets/p53_genesets.gmt")
jack_gs<-GSA.read.gmt("/n/rinn_data1/users/agroff/seq/OtherMice/Diana/lincP21/analysis/Jacks_genesets.gmt")
cuff<-readCufflinks(dir=dir,gtfFile="/n/rinn_data1/seq/lgoff/Projects/BrainMap/data/annotation/mm10_gencode_vM2_with_lncRNAs_and_LacZ.gtf",genome=genome)
population<-genes(cuff)
population.diff<-diffData(population)
annotation<-annotation(genes(cuff))
gene_names<-merge(annotation,population.diff)
gene_set_index <- function(genelist, short_names){
which(short_names %in% genelist)
}
get_gene_set_p_vals <- function(input, gs, alternative){
gene_set_indices <- lapply(gs$genesets, function(genelist){
gene_set_index(genelist,input$short_name)
})
pvl<-lapply(gene_set_indices,geneSetTest,input$test_stat, alternative=alternative)
pvl_mat<-as.data.frame(t(unlist(pvl)))
colnames(pvl_mat) <- gs$geneset.names
return(pvl_mat)
}
get_gene_set_q_vals <- function(pvl_mat, method="bonferroni"){
comp_corrected <- matrix(p.adjust(pvl_mat, method=method), nrow=nrow(pvl_mat), ncol=ncol(pvl_mat))
colnames(comp_corrected) <- colnames(pvl_mat)
rownames(comp_corrected) <- rownames(pvl_mat)
return(comp_corrected)
}
colMins<-function(x){
apply(x,2,min)
}
rowMins<-function(x){
apply(x,1,min)
}
InputCols<-maPalette(low="white",high="red",k=100)
ztest<-function(samp,pop){
(mean(samp,na.rm=T)-mean(pop,na.rm=T))/sd(pop,na.rm=T)
}
get_gene_set_ztest <- function(scoring_df, gs){
gene_set_indices <- lapply(gs$genesets, function(genelist){
gene_set_index(genelist, scoring_df$short_name)
})
zscores <- lapply(gene_set_indices,function(gsi){
ztest(scoring_df$test_stat[gsi],scoring_df$test_stat)
})
zscore_mat<-do.call(rbind,lapply(zscores,unlist))
rownames(zscore_mat) <- gs$geneset.names
colnames(zscore_mat) <- "zscore"
return(zscore_mat)
}
df.pop<-data.frame("short_name"=toupper(gene_names$gene_short_name),"test_stat"=gene_names$test_stat)
df.pop.unique<-unique(df.pop)
rownames(df.pop.unique)<-NULL
df.pop.unique.ordered<-df.pop.unique[order(df.pop.unique$test_stat),]
Input.df<-df.pop.unique.ordered
Input.df$short_name<-as.character(Input.df$short_name)
jacks_pval_mat<-get_gene_set_p_vals(Input.df,jacks_gs,alternative="either")
jacks_pval_mat<-get_gene_set_p_vals(Input.df,jacks_gs,alternative="either")
jacks_gs<-GSA.read.gmt("/n/rinn_data1/users/agroff/seq/OtherMice/Diana/lincP21/analysis/Jacks_genesets.gmt")
jacks_pval_mat<-get_gene_set_p_vals(Input.df,jacks_gs,alternative="either")
jacks_pval_corrected<-get_gene_set_q_vals(jacks_pval_mat)
jacks_pval_corrected<-rbind(jacks_pval_corrected,jacks_pval_corrected)
jacks_zscores<-get_gene_set_ztest(Input.df,jacks_gs)
jacks_zscores<-cbind(jacks_zscores,jacks_zscores)
InputCols<-maPalette(low="white",high="red",k=100)
x<-(-log10(t(jacks_pvl_corrected[,which(colMins(jacks_pvl_corrected) < 0.001)])))
x<-(-log10(t(jacks_pvl_corrected[,which(colMins(jacks_pval_corrected) < 0.001)])))
x<-(-log10(t(jacks_pval_corrected[,which(colMins(jacks_pval_corrected) < 0.001)])))
x_ordered<-x[order(x[,1], decreasing=TRUE),]
noinfinities_x<-x_ordered[which(x_ordered !="Inf")]
x_max<-max(noinfinities_x)+100
x_ordered[x_ordered=="Inf"]<-x_max
if(dim(x_ordered)[1]>1){
heatmap.2(x_ordered, trace="none",col=InputCols,breaks=enrichmentBreaks, margins=c(1,20),dendrogram="both",labCol=c(""),cexRow =1, offsetRow=0)
}else{print("Not enough significant categories to print a heatmap!")}
rm(x_ordered)
k <- 100
myColors<-maPalette(low="blue",mid="white",high="red",k=k)
myBreaks<-seq(-2,2,length.out=(k+1))
enrichmentBreaks<-seq(0,6,length.out=(k+1))
x<-(-log10(t(jacks_pval_corrected[,which(colMins(jacks_pval_corrected) < 0.001)])))
x_ordered<-x[order(x[,1], decreasing=TRUE),]
noinfinities_x<-x_ordered[which(x_ordered !="Inf")]
x_max<-max(noinfinities_x)+100
x_ordered[x_ordered=="Inf"]<-x_max
if(dim(x_ordered)[1]>1){
heatmap.2(x_ordered, trace="none",col=InputCols,breaks=enrichmentBreaks, margins=c(1,20),dendrogram="both",labCol=c(""),cexRow =1, offsetRow=0)
}else{print("Not enough significant categories to print a heatmap!")}
rm(x_ordered)
rm(x)
x<-jacks_zscores[which(colMins(jacks_pval_corrected) < 0.001),]
x_ordered<-x[order(x[,1], decreasing=TRUE),]
x_ordered<-as.matrix(x_ordered)
if(dim(x_ordered)[1]>1){
heatmap.2(x_ordered, trace="none",col=myColors,breaks=myBreaks,margins=c(1,20),dendrogram="both",labCol=c(""),cexRow = 1, offsetRow=0)
}else{print("Not enough significant categories to print a heatmap!")}
if(dim(x_ordered)[1]>1){
heatmap.2(x_ordered, trace="none",col=myColors,breaks=myBreaks,margins=c(1,20),dendrogram="both",labCol=c(""),cexRow = 1, offsetRow=0)
}else{print("Not enough significant categories to print a heatmap!")}
all_gs<-GSA.read.gmt("/n/rinn_data1/users/agroff/seq/OtherMice/Diana/lincP21/diff/p53_genesets/msigdb.v4.0.symbols.gmt")
ALL_pval_mat<-get_gene_set_p_vals(Input.df,all_gs,alternative="either")
all_pval_corrected<-get_gene_set_q_vals(ALL_pval_mat)
all_pval_corrected<-rbind(all_pval_corrected,all_pval_corrected)
all_zscores<-get_gene_set_ztest(Input.df,all_gs)
all_zscores<-cbind(all_zscores,all_zscores)
x<-(-log10(t(all_pval_corrected[,which(colMins(all_pval_corrected) < 0.0001)])))
x_ordered<-x[order(x[,1], decreasing=TRUE),]
gseaEnriched<-length(x_ordered)
if (length(x_ordered)==0){gseaEnriched=0}
gseaEnriched
if(length(x_ordered)>500){x_ordered<-x_ordered[1:500,]}
noinfinities_x<-x_ordered[which(x_ordered !="Inf")]
x_max<-max(noinfinities_x)+100
x_ordered[x_ordered=="Inf"]<-x_max
if(dim(x_ordered)[1]>1){
heatmap.2(x_ordered, trace="none",col=InputCols,breaks=enrichmentBreaks, margins=c(1,20),dendrogram="both",labCol=c(""),cexRow =1, offsetRow=0)
}else{print("Not enough significant categories to print a heatmap!")}
rm(x_ordered)
rm(x_max)
rm(x)
sig<-getSig(cuff,alpha=alpha)
sig<-getSig(cuff,alpha=0.05)
sigGenes<-getGenes(cuff,sig)
geneAnnot<-annotation(sigGenes)
geneDat<-diffData(sigGenes)
num<-length(sig)
if (length(sig)==0){num=0}
num
tissue<-"brain"
bamRoot<-'/n/rinn_data1/users/agroff/seq/OtherMice/Diana/lincP21/bam/'
#if tissue is brain::
if grepl("brain",tissue){
bamRoon<-"/n/rinn_data1/seq/lgoff/Projects/BrainMap/data/bam"
}
if(grepl("brain",tissue)){
bamRoon<-"/n/rinn_data1/seq/lgoff/Projects/BrainMap/data/bam"
}
bamRoot<-'/n/rinn_data1/users/agroff/seq/OtherMice/Diana/lincP21/bam/'
#if tissue is brain::
if(grepl("brain",tissue)){
bamRoot<-"/n/rinn_data1/seq/lgoff/Projects/BrainMap/data/bam"
}
rm bamRoon
rm(bamRoon)
bamRoot
tissue<-"kidney"
bamRoot<-'/n/rinn_data1/users/agroff/seq/OtherMice/Diana/lincP21/bam/'
#if tissue is brain::
if(grepl("brain",tissue)){
bamRoot<-"/n/rinn_data1/seq/lgoff/Projects/BrainMap/data/bam"
}
bamRoot
dir<-"/n/rinn_data1/seq/lgoff/Projects/BrainMap/data/diffs/Trp53cor1_vs_WT_Adult"
sample<-brain
sample<-"brain"
library(cummeRbund)
cuff<-readCufflinks(dir=dir,gtfFile="/n/rinn_data1/seq/lgoff/Projects/BrainMap/data/annotation/mm10_gencode_vM2_with_lncRNAs_and_LacZ.gtf",genome="mm10")
name<-strain
myGene<-getGene(cuff,name)
library(GenomicFeatures)
strain<-"Trp53cor1"
name<-strain
myGene<-getGene(cuff,name)
library(GenomicFeatures)
library(Gviz)
real_chromInfo<-read.table("/n/rinn_data1/users/agroff/GITHUB/BrainMap/abbie_annotation/real_chromosomes_mm10_brainmap.chrom.info",header=TRUE)
genome<-"mm10"
mm10DB<-loadDb("/n/rinn_data1/users/agroff/GITHUB/BrainMap/analysis/mm10gencode_brainmapDB_nolacz.sqlite")
#Helper Functions
movingAverage <- function(x, n=10, centered=TRUE) {
if (centered) {
before <- floor  ((n-1)/2)
after  <- ceiling((n-1)/2)
} else {
before <- n-1
after  <- 0
}
# Track the sum and count of number of non-NA items
s     <- rep(0, length(x))
count <- rep(0, length(x))
# Add the centered data
new <- x
# Add to count list wherever there isn't a
count <- count + !is.na(new)
# Now replace NA_s with 0_s and add to total
new[is.na(new)] <- 0
s <- s + new
# Add the data from before
i <- 1
while (i <= before) {
# This is the vector with offset values to add
new   <- c(rep(NA, i), x[1:(length(x)-i)])
count <- count + !is.na(new)
new[is.na(new)] <- 0
s <- s + new
i <- i+1
}
# Add the data from after
i <- 1
while (i <= after) {
# This is the vector with offset values to add
new   <- c(x[(i+1):length(x)], rep(NA, i))
count <- count + !is.na(new)
new[is.na(new)] <- 0
s <- s + new
i <- i+1
}
# return sum divided by count
s/count
}
makeBamTrack<-function(bamFile,bamName,genome=genome,chromosome,color="steelblue",window=20,ylim=c(0,60)){
track<-DataTrack(range=bamFile,name=bamName,genome=genome,type="h",transformation=function(x){movingAverage(x,window)},col=color,fill.histogram=color,col.histogram=color,chromosome=chromosome, ylim=ylim, lwd=1.5)
return(track)
}
### Constants #########
annot<-annotation(myGene)
margin<-20000
locus<-strsplit(annot$locus,":")
locus<-unlist(locus)
chrom<-locus[[1]]
start_and_end<-strsplit(locus[[2]],"-")
start_and_end<-unlist(start_and_end)
from<-as.numeric(start_and_end[[1]])-margin
to<-as.numeric(start_and_end[[2]])+margin
genetrack<-GeneRegionTrack(mm10DB,rstarts=from,rends=to,chromosome=chrom,showId=TRUE,geneSymbol=TRUE,genome=genome,name="LincRNA Isoforms",fill="steelblue")
reps<-replicates(cuff)
files<-lapply(reps$file,function(x){strsplit(x, "/")})
files<-as.data.frame(files)
samples<-(t(files[11,]))
rownames(samples)<-NULL
JRs<-samples
colnames(deletionCoords)<-c("gene_name","gene_region","deletionRegion")
koStrain<-strain
coords<-deletionCoords[which(deletionCoords$gene_name==koStrain),3]
coords<-strsplit(coords,":")
coords<-unlist(coords)
koChr<-coords[1]
positions<-strsplit(coords[[2]],"-")
positions<-unlist(positions)
koStart<-as.numeric(positions[1])
koWidth<-abs(as.numeric(positions[2])-as.numeric(positions[1]))
bamRoot<-'/n/rinn_data1/users/agroff/seq/OtherMice/Diana/lincP21/bam/'
#if tissue is brain::
if(grepl("brain",sample)){
bamRoot<-"/n/rinn_data1/seq/lgoff/Projects/BrainMap/data/bam"
}
bamFiles<-lapply(JRs,function(x){paste(bamRoot,x,"/accepted_hits.bam",sep="")})
bamNames<-reps$rep_name
specCols<-brewer.pal(3,"Paired")
colPal<-colorRampPalette(specCols)
bamColors<-colPal(length(bamFiles))
doPlot<-function(genome=genome,name,myChr,from,to,window,bamFiles,bamNames,koStart,koWidth,koChr){
#Make Tracks
axTrack<-GenomeAxisTrack(add53 = TRUE,add35 = TRUE, labelPos = "above")
idxTrack <- IdeogramTrack(genome = genome, chromosome = myChr)
koTrack<-AnnotationTrack(start=koStart,width=koWidth,chromosome=koChr,strand="*",id=koStrain,genome="mm10",name="KO Region")
#BamTracks
write("\tBamTracks",stderr())
bamTracks<-list()
bamOrder<-c(1:length(bamFiles))
for (i in bamOrder){
track<-makeBamTrack(bamFiles[[i]],bamNames[[i]],genome=genome,chromosome=myChr,color=bamColors[i],window=window)
bamTracks<-c(bamTracks,track)
}
#Plot Tracks
write("\tplotting...",stderr())
# myTracks<-c(bamTracks,knownGenes)
myTracks<-c(idxTrack,axTrack,genetrack,bamTracks,koTrack)
trackSizes<-c(1,1,4,rep(1,length(bamTracks)),1)
plotTracks(myTracks,from=from,to=to,chromosome=myChr,showAxis=FALSE,background.title="black",col.title="white",col.axis="black",sizes=trackSizes,geneSymbol=TRUE)
}
doPlot(genome=genome, name=name, myChr=chrom, from=from, to=to, window=20,bamFiles=bamFiles, bamNames=bamNames, koStart=koStart,koWidth=koWidth,koChr=koChr)
real_chromInfo<-read.table("/n/rinn_data1/users/agroff/GITHUB/BrainMap/abbie_annotation/real_chromosomes_mm10_brainmap.chrom.info",header=TRUE)
genome<-"mm10"
mm10DB<-loadDb("/n/rinn_data1/users/agroff/GITHUB/BrainMap/analysis/mm10gencode_brainmapDB_nolacz.sqlite")
movingAverage <- function(x, n=10, centered=TRUE) {
if (centered) {
before <- floor  ((n-1)/2)
after  <- ceiling((n-1)/2)
} else {
before <- n-1
after  <- 0
}
# Track the sum and count of number of non-NA items
s     <- rep(0, length(x))
count <- rep(0, length(x))
# Add the centered data
new <- x
# Add to count list wherever there isn't a
count <- count + !is.na(new)
# Now replace NA_s with 0_s and add to total
new[is.na(new)] <- 0
s <- s + new
# Add the data from before
i <- 1
while (i <= before) {
# This is the vector with offset values to add
new   <- c(rep(NA, i), x[1:(length(x)-i)])
count <- count + !is.na(new)
new[is.na(new)] <- 0
s <- s + new
i <- i+1
}
# Add the data from after
i <- 1
while (i <= after) {
# This is the vector with offset values to add
new   <- c(x[(i+1):length(x)], rep(NA, i))
count <- count + !is.na(new)
new[is.na(new)] <- 0
s <- s + new
i <- i+1
}
# return sum divided by count
s/count
}
makeBamTrack<-function(bamFile,bamName,genome=genome,chromosome,color="steelblue",window=20,ylim=c(0,60)){
track<-DataTrack(range=bamFile,name=bamName,genome=genome,type="h",transformation=function(x){movingAverage(x,window)},col=color,fill.histogram=color,col.histogram=color,chromosome=chromosome, ylim=ylim, lwd=1.5)
return(track)
}
annot<-annotation(myGene)
margin<-20000
locus<-strsplit(annot$locus,":")
locus<-unlist(locus)
chrom<-locus[[1]]
start_and_end<-strsplit(locus[[2]],"-")
start_and_end<-unlist(start_and_end)
from<-as.numeric(start_and_end[[1]])-margin
to<-as.numeric(start_and_end[[2]])+margin
genetrack<-GeneRegionTrack(mm10DB,rstarts=from,rends=to,chromosome=chrom,showId=TRUE,geneSymbol=TRUE,genome=genome,name="LincRNA Isoforms",fill="steelblue")
reps<-replicates(cuff)
files<-lapply(reps$file,function(x){strsplit(x, "/")})
files<-as.data.frame(files)
samples<-(t(files[11,]))
rownames(samples)<-NULL
JRs<-samples
colnames(deletionCoords)<-c("gene_name","gene_region","deletionRegion")
koStrain<-strain
coords<-deletionCoords[which(deletionCoords$gene_name==koStrain),3]
coords<-strsplit(coords,":")
coords<-unlist(coords)
koChr<-coords[1]
positions<-strsplit(coords[[2]],"-")
positions<-unlist(positions)
koStart<-as.numeric(positions[1])
deletionCoords<-read.table("/n/rinn_data1/users/agroff/GITHUB/BrainMap/analysis/mm10DeletionCoords.txt",sep="\t",header=TRUE,stringsAsFactors=FALSE)
colnames(deletionCoords)<-c("gene_name","gene_region","deletionRegion")
colnames(deletionCoords)<-c("gene_name","gene_region","deletionRegion")
koStrain<-strain
coords<-deletionCoords[which(deletionCoords$gene_name==koStrain),3]
coords<-strsplit(coords,":")
coords<-unlist(coords)
koChr<-coords[1]
positions<-strsplit(coords[[2]],"-")
positions<-unlist(positions)
koStart<-as.numeric(positions[1])
koWidth<-abs(as.numeric(positions[2])-as.numeric(positions[1]))
bamRoot<-'/n/rinn_data1/users/agroff/seq/OtherMice/Diana/lincP21/bam/'
#if tissue is brain::
if(grepl("brain",sample)){
bamRoot<-"/n/rinn_data1/seq/lgoff/Projects/BrainMap/data/bam"
}
bamFiles<-lapply(JRs,function(x){paste(bamRoot,x,"/accepted_hits.bam",sep="")})
bamNames<-reps$rep_name
specCols<-brewer.pal(3,"Paired")
colPal<-colorRampPalette(specCols)
bamColors<-colPal(length(bamFiles))
library(xtable)
library(limma)
library(GSA)
library(gplots)
library(marray)
library(ggplot2)
library(gtable)
library(gridExtra)
library(RColorBrewer)
library(RMySQL)
specCols<-brewer.pal(3,"Paired")
colPal<-colorRampPalette(specCols)
bamColors<-colPal(length(bamFiles))
doPlot<-function(genome=genome,name,myChr,from,to,window,bamFiles,bamNames,koStart,koWidth,koChr){
#Make Tracks
axTrack<-GenomeAxisTrack(add53 = TRUE,add35 = TRUE, labelPos = "above")
idxTrack <- IdeogramTrack(genome = genome, chromosome = myChr)
koTrack<-AnnotationTrack(start=koStart,width=koWidth,chromosome=koChr,strand="*",id=koStrain,genome="mm10",name="KO Region")
#BamTracks
write("\tBamTracks",stderr())
bamTracks<-list()
bamOrder<-c(1:length(bamFiles))
for (i in bamOrder){
track<-makeBamTrack(bamFiles[[i]],bamNames[[i]],genome=genome,chromosome=myChr,color=bamColors[i],window=window)
bamTracks<-c(bamTracks,track)
}
#Plot Tracks
write("\tplotting...",stderr())
# myTracks<-c(bamTracks,knownGenes)
myTracks<-c(idxTrack,axTrack,genetrack,bamTracks,koTrack)
trackSizes<-c(1,1,4,rep(1,length(bamTracks)),1)
plotTracks(myTracks,from=from,to=to,chromosome=myChr,showAxis=FALSE,background.title="black",col.title="white",col.axis="black",sizes=trackSizes,geneSymbol=TRUE)
}
doPlot(genome=genome, name=name, myChr=chrom, from=from, to=to, window=20,bamFiles=bamFiles, bamNames=bamNames, koStart=koStart,koWidth=koWidth,koChr=koChr)
JRs
samples
fiiles
files
files<-as.data.frame(files)
samples<-(t(files[12,]))
if(grepl("brain",sample)){
samples<-t(files[10,])
}
rownames(samples)<-NULL
samples
JRs<-samples
colnames(deletionCoords)<-c("gene_name","gene_region","deletionRegion")
koStrain<-strain
coords<-deletionCoords[which(deletionCoords$gene_name==koStrain),3]
coords<-strsplit(coords,":")
coords<-unlist(coords)
koChr<-coords[1]
positions<-strsplit(coords[[2]],"-")
positions<-unlist(positions)
koStart<-as.numeric(positions[1])
koWidth<-abs(as.numeric(positions[2])-as.numeric(positions[1]))
bamRoot<-'/n/rinn_data1/users/agroff/seq/OtherMice/Diana/lincP21/bam/'
#if tissue is brain::
if(grepl("brain",sample)){
bamRoot<-"/n/rinn_data1/seq/lgoff/Projects/BrainMap/data/bam"
}
bamFiles<-lapply(JRs,function(x){paste(bamRoot,x,"/accepted_hits.bam",sep="")})
bamNames<-reps$rep_name
specCols<-brewer.pal(3,"Paired")
colPal<-colorRampPalette(specCols)
bamColors<-colPal(length(bamFiles))
doPlot<-function(genome=genome,name,myChr,from,to,window,bamFiles,bamNames,koStart,koWidth,koChr){
#Make Tracks
axTrack<-GenomeAxisTrack(add53 = TRUE,add35 = TRUE, labelPos = "above")
idxTrack <- IdeogramTrack(genome = genome, chromosome = myChr)
koTrack<-AnnotationTrack(start=koStart,width=koWidth,chromosome=koChr,strand="*",id=koStrain,genome="mm10",name="KO Region")
#BamTracks
write("\tBamTracks",stderr())
bamTracks<-list()
bamOrder<-c(1:length(bamFiles))
for (i in bamOrder){
track<-makeBamTrack(bamFiles[[i]],bamNames[[i]],genome=genome,chromosome=myChr,color=bamColors[i],window=window)
bamTracks<-c(bamTracks,track)
}
#Plot Tracks
write("\tplotting...",stderr())
# myTracks<-c(bamTracks,knownGenes)
myTracks<-c(idxTrack,axTrack,genetrack,bamTracks,koTrack)
trackSizes<-c(1,1,4,rep(1,length(bamTracks)),1)
plotTracks(myTracks,from=from,to=to,chromosome=myChr,showAxis=FALSE,background.title="black",col.title="white",col.axis="black",sizes=trackSizes,geneSymbol=TRUE)
}
doPlot(genome=genome, name=name, myChr=chrom, from=from, to=to, window=20,bamFiles=bamFiles, bamNames=bamNames, koStart=koStart,koWidth=koWidth,koChr=koChr)
if(grepl("brain",sample)){
bamRoot<-"/n/rinn_data1/seq/lgoff/Projects/BrainMap/data/bam/"
}
bamFiles<-lapply(JRs,function(x){paste(bamRoot,x,"/accepted_hits.bam",sep="")})
bamNames<-reps$rep_name
specCols<-brewer.pal(3,"Paired")
colPal<-colorRampPalette(specCols)
bamColors<-colPal(length(bamFiles))
doPlot<-function(genome=genome,name,myChr,from,to,window,bamFiles,bamNames,koStart,koWidth,koChr){
#Make Tracks
axTrack<-GenomeAxisTrack(add53 = TRUE,add35 = TRUE, labelPos = "above")
idxTrack <- IdeogramTrack(genome = genome, chromosome = myChr)
koTrack<-AnnotationTrack(start=koStart,width=koWidth,chromosome=koChr,strand="*",id=koStrain,genome="mm10",name="KO Region")
#BamTracks
write("\tBamTracks",stderr())
bamTracks<-list()
bamOrder<-c(1:length(bamFiles))
for (i in bamOrder){
track<-makeBamTrack(bamFiles[[i]],bamNames[[i]],genome=genome,chromosome=myChr,color=bamColors[i],window=window)
bamTracks<-c(bamTracks,track)
}
#Plot Tracks
write("\tplotting...",stderr())
# myTracks<-c(bamTracks,knownGenes)
myTracks<-c(idxTrack,axTrack,genetrack,bamTracks,koTrack)
trackSizes<-c(1,1,4,rep(1,length(bamTracks)),1)
plotTracks(myTracks,from=from,to=to,chromosome=myChr,showAxis=FALSE,background.title="black",col.title="white",col.axis="black",sizes=trackSizes,geneSymbol=TRUE)
}
doPlot(genome=genome, name=name, myChr=chrom, from=from, to=to, window=20,bamFiles=bamFiles, bamNames=bamNames, koStart=koStart,koWidth=koWidth,koChr=koChr)
